<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>
<!--
Part of the Fluid Corpus Manipulation Project (http://www.flucoma.org/)
Copyright 2017-2019 University of Huddersfield.
Licensed under the BSD-3 License.
See license.md file in the project root for full license information.
This project has received funding from the European Research Council (ERC)
under the European Union’s Horizon 2020 research and innovation programme
(grant agreement No 725899).
-->
<!-- DO NOT EDIT THIS FILE ... YOU WILL LOSE YOUR WORK -->
<c74object name='fluid.nmfmatch~' category='FluidCorpusManuipulation'>
	<digest>Real-Time Non-Negative Matrix Factorisation with Fixed Bases</digest>
	<description><div class="document">
<p>Matches an incoming audio signal against a set of spectral templates</p>
</div>
</description>
  <discussion>
      <h4><openfilelink filename="Fluid Corpus Manipulation Toolkit.maxpat">Open the Overview Patch</openfilelink></h4>
    <div class="document">
<p>This uses an slimmed-down version of Nonnegative Matrix Factorisation (NMF, Lee, Daniel D., and H. Sebastian Seung. 1999. ‘Learning the Parts of Objects by Non-Negative Matrix Factorization’. Nature 401 (6755): 788–91. <a class="reference external" href="https://doi.org/10.1038/44565">https://doi.org/10.1038/44565</a>.)</p>
<p>It outputs at kr the degree of detected match for each template (the activation amount, in NMF-terms). The spectral templates are presumed to have been produced by the offline NMF process (BufNMF), and must be the correct size with respect to the FFT settings being used (FFT size / 2 + 1 frames long). The components of the decomposition is determined by the number of channels in the supplied buffer of templates, up to a maximum set by the maxComponents parameter.</p>
<p>NMF has been a popular technique in signal processing research for things like source separation and transcription (see e.g Smaragdis and Brown, Non-Negative Matrix Factorization for Polyphonic Music Transcription.), although its creative potential is so far relatively unexplored. It works iteratively, by trying to find a combination of amplitudes ('activations') that yield the original magnitude spectrogram of the audio input when added together. By and large, there is no unique answer to this question (i.e. there are different ways of accounting for an evolving spectrum in terms of some set of templates and envelopes). In its basic form, NMF is a form of unsupervised learning: it starts with some random data and then converges towards something that minimizes the distance between its generated data and the original:it tends to converge very quickly at first and then level out. Fewer iterations mean less processing, but also less predictable results.</p>
<p>The whole process can be related to a channel vocoder where, instead of fixed bandpass filters, we get more complex filter shapes and the activations correspond to channel envelopes.</p>
</div>


		fluid.nmfmatch~ is part of the Fluid Decomposition Toolkit of the FluCoMa project. For more explanations, learning material, and discussions on its musicianly uses, visit <a href="http://www.flucoma.org/">flucoma.org</a>.

  </discussion>
	<!--METADATA-->
	<metadatalist>
		<metadata name='author'>FluCoMa</metadata>
		<metadata name='tag'>Fluid Decomposition</metadata>
		<metadata name='tag'>corpus</metadata>
	</metadatalist>
	<!--ARGUMENTS-->
	<objarglist><objarg name='maxcomponents' optional='1' type='number'>
        <digest>
          Maximum Number of Components
        </digest>
        <description>
          <div class="document">
<p>The maximum number of elements the NMF algorithm will try to divide the spectrogram of the source in. This dictates the number of output channelsfor the ugen. This cannot be modulated.</p>
</div>

          <h5>Constraints</h5><ul><li>Minimum: 1</li></ul>
        </description><attributelist>
          <attribute name="default" get="1" set="1" type="int" size='1' value='20' />
        </attributelist></objarg><objarg name='maxfftsize' optional='1' type='number'>
        <digest>
          Maxiumm FFT Size
        </digest>
        <description>
          <div class="document">
<p>How large can the FFT be, by allocating memory at instantiation time. This cannot be modulated.</p>
</div>

          <h5>Constraints</h5><ul><li>Minimum: 4</li><li>Snaps to powers of two</li></ul>
        </description><attributelist>
          <attribute name="default" get="1" set="1" type="int" size='1' value='16384' />
        </attributelist></objarg><!-- <objarg name='function' optional='1' type='number'>
			<digest>Initial easing function to use</digest>
			<description>Initial easing function to use. </description>
		</objarg>-->
	</objarglist>
	<!--MESSAGES-->
  <methodlist><method name="reset">
      <arglist />
      <digest>
        Return the object to its original state
      </digest>
      <description>
        Calling <m>reset</m> will change parameter values back to those the object was <i>created</i> with, i.e. any attribute values set in the box will be retained
      </description>
    </method></methodlist>
	<!--ATTRIBUTES-->
	<attributelist><attribute name='bases' get='1' set='1' type='symbol' size='1'>
        <digest>
          Bases Buffer
        </digest>
        <description>
          <div class="document">
<p>The buffer containing the different bases that the input signal will be matched against. Bases must be (fft size / 2) + 1 frames. If the buffer has more than maxComponents channels, the excess will be ignored.</p>
</div>

          
        </description><attributelist><attribute name="default" get="1" set="1" type="int" size='1' value='None' /></attributelist></attribute><attribute name='fftsettings' get='1' set='1' type='int' size='3'>
        <digest>
          FFT Settings
        </digest>
        <description>
          <div class="document">
<p>FFT settings consist of three numbers representing the window size, hop size and FFT size in samples:</p>
<p>The hop size and fft size can both be set to -1 (and are by default), with slightly different meanings:</p>
<ul class="simple">
<li>For the hop size, -1 = <tt class="docutils literal">windowSize/2</tt></li>
<li>For the FFT size, -1 = <tt class="docutils literal">windowSize</tt> snapped to the nearest equal / greater power of 2 (e.g. <tt class="docutils literal">windowSize 1024</tt> =&gt; <tt class="docutils literal">fftSize 1024</tt>, but <tt class="docutils literal">windowsSize 1000</tt> also =&gt; <tt class="docutils literal">fftSize 1024</tt>)</li>
</ul>
</div>

          <h5>Constraints</h5><ul><li> FFTSize, if != -1, will set to the next greatest power of two &gt; 4</li><li>The maximum manual FFT size is limited to the value of the <at>maxfftsize</at> initialization argument</li><li>if FFT size != -1, then window size is clipped at FFT size</li></ul>
        </description><attributelist><attribute name="default" get="1" set="1" type="int" size='3' value='[[&#39;winSize&#39;, 1024], [&#39;hopSize&#39;, -1], [&#39;fftSize&#39;, -1]]' /></attributelist></attribute><attribute name='iterations' get='1' set='1' type='int' size='1'>
        <digest>
          Number of Iterations
        </digest>
        <description>
          <div class="document">
<p>The NMF process is iterative, trying to converge to the smallest error in its factorisation. The number of iterations will decide how many times it tries to adjust its estimates. Higher numbers here will be more CPU intensive, lower numbers will be more unpredictable in quality.</p>
</div>

          <h5>Constraints</h5><ul><li>Minimum: 1</li></ul>
        </description><attributelist><attribute name="default" get="1" set="1" type="int" size='1' value='10' /></attributelist></attribute><attribute name='warnings' get='1' set='1' type='int' size='1'>
        <digest>
          Warnings
        </digest>
        <description>
          <div class="document">
<p>Enable warnings to be issued whenever a parameter value is constrained (e.g. clipped)</p>
</div>

          <h5>Constraints</h5><ul><li>Minimum: 0</li><li>Maximum: 1</li></ul>
        </description><attributelist><attribute name="default" get="1" set="1" type="int" size='1' value='0' /></attributelist></attribute></attributelist>
	<!--RELATED-->
	<seealsolist>
    
    <seealso name='fluid.nmffilter~' />
    <seealso name='fluid.bufnmf~' />
	</seealsolist>
</c74object>